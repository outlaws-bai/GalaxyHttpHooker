# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import HttpHook_pb2 as HttpHook__pb2


class HttpHookServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.hookRequestToBurp = channel.unary_unary(
                '/org.m2sec.rpc.HttpHookService/hookRequestToBurp',
                request_serializer=HttpHook__pb2.Request.SerializeToString,
                response_deserializer=HttpHook__pb2.Request.FromString,
                )
        self.hookRequestToServer = channel.unary_unary(
                '/org.m2sec.rpc.HttpHookService/hookRequestToServer',
                request_serializer=HttpHook__pb2.Request.SerializeToString,
                response_deserializer=HttpHook__pb2.Request.FromString,
                )
        self.hookResponseToBurp = channel.unary_unary(
                '/org.m2sec.rpc.HttpHookService/hookResponseToBurp',
                request_serializer=HttpHook__pb2.Response.SerializeToString,
                response_deserializer=HttpHook__pb2.Response.FromString,
                )
        self.hookResponseToClient = channel.unary_unary(
                '/org.m2sec.rpc.HttpHookService/hookResponseToClient',
                request_serializer=HttpHook__pb2.Response.SerializeToString,
                response_deserializer=HttpHook__pb2.Response.FromString,
                )


class HttpHookServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def hookRequestToBurp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def hookRequestToServer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def hookResponseToBurp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def hookResponseToClient(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HttpHookServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'hookRequestToBurp': grpc.unary_unary_rpc_method_handler(
                    servicer.hookRequestToBurp,
                    request_deserializer=HttpHook__pb2.Request.FromString,
                    response_serializer=HttpHook__pb2.Request.SerializeToString,
            ),
            'hookRequestToServer': grpc.unary_unary_rpc_method_handler(
                    servicer.hookRequestToServer,
                    request_deserializer=HttpHook__pb2.Request.FromString,
                    response_serializer=HttpHook__pb2.Request.SerializeToString,
            ),
            'hookResponseToBurp': grpc.unary_unary_rpc_method_handler(
                    servicer.hookResponseToBurp,
                    request_deserializer=HttpHook__pb2.Response.FromString,
                    response_serializer=HttpHook__pb2.Response.SerializeToString,
            ),
            'hookResponseToClient': grpc.unary_unary_rpc_method_handler(
                    servicer.hookResponseToClient,
                    request_deserializer=HttpHook__pb2.Response.FromString,
                    response_serializer=HttpHook__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'org.m2sec.rpc.HttpHookService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class HttpHookService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def hookRequestToBurp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.m2sec.rpc.HttpHookService/hookRequestToBurp',
            HttpHook__pb2.Request.SerializeToString,
            HttpHook__pb2.Request.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def hookRequestToServer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.m2sec.rpc.HttpHookService/hookRequestToServer',
            HttpHook__pb2.Request.SerializeToString,
            HttpHook__pb2.Request.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def hookResponseToBurp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.m2sec.rpc.HttpHookService/hookResponseToBurp',
            HttpHook__pb2.Response.SerializeToString,
            HttpHook__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def hookResponseToClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/org.m2sec.rpc.HttpHookService/hookResponseToClient',
            HttpHook__pb2.Response.SerializeToString,
            HttpHook__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
